name: Build & test

permissions: {}

on:
  push:
    branches: [ master ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
          - build: macos
            os: macos-latest
          - build: windows
            os: windows-latest
            extension: .exe

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
      with:
        toolchain: stable
    - name: Build
      env:
        RUSTFLAGS: -D warnings
      uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # v1.0.1
      with:
        command: build
        args: --release --all --exclude mla-fuzz-afl --verbose
    - name: Run tests
      run: cargo test --all --exclude mla-fuzz-afl --release --verbose
    - name: Upload resulting 'mlar'
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
      with:
        name: ${{ matrix.build }}
        path: ./target/release/mlar${{ matrix.extension }}

  long-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
      with:
        toolchain: stable
    - name: Run long tests
      run: cd mla && cargo test --release -- --ignored

  all-features:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
      with:
        toolchain: stable
    - name: Run long tests
      run: cargo test --all-features --all --exclude mla-fuzz-afl --exclude mla-bindings-c --release

  test-bindings-c-cpp-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
      with:
        toolchain: stable
    - name: Run C bindings tests on Linux
      working-directory: bindings/C/tests/linux-gcc-g++/
      run: make CC=gcc
    - name: Run C bindings tests on Linux
      working-directory: bindings/C/tests/linux-gcc-g++/
      run: make CC=g++

  test-bindings-c-cpp-windows:
    strategy:
      matrix:
        version: [Debug-c, Release-c, Debug-cpp, Release-cpp]
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc]
        include:
          - version: Debug-c
            cargo_arg: ""
          - version: Release-c
            cargo_arg: --release
          - version: Debug-cpp
            cargo_arg: ""
          - version: Release-cpp
            cargo_arg: --release
          - target: i686-pc-windows-msvc
            msvc_platform: Win32
          - target: x86_64-pc-windows-msvc
            msvc_platform: x64
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
      with:
        toolchain: stable
        default: true
        target: ${{ matrix.target }}
    - uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2.0.0
    - name: Compile C/CPP bindings test program for Windows
      working-directory: bindings/C/tests/windows-msvc/
      run: msbuild mla-bindings-test.sln /p:Platform=${{ matrix.msvc_platform }} /p:Configuration=${{ matrix.version }}
    - name: Run C/CPP bindings test program on Windows
      working-directory: bindings/C/tests/windows-msvc/
      run: ./${{ matrix.msvc_platform }}/${{ matrix.version }}/mla-bindings-test.exe

  afl-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
        with:
          toolchain: stable
      - name: Install dependencies
        run: sudo apt-get install llvm
      - name: Install cargo-afl binary crate
        uses: actions-rs/install@9da1d2adcfe5e7c16992e8242ca33a56b6d9b101 # v0.1.2
        with:
          crate: cargo-afl
          version: latest
          use-tool-cache: true
      - name: Test AFL build
        env:
          RUSTFLAGS: -D warnings
        run: cargo afl build

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
        with:
          toolchain: stable
          components: rustfmt
      - name: Check format
        run: cargo fmt --all -- --check

  audit:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Security audit
        uses: actions-rs/audit-check@35b7b53b1e25b55642157ac01b4adceb5b9ebef3 # v1.2.0
        with:
         token: ${{ secrets.GITHUB_TOKEN }}

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
        with:
          toolchain: stable
          components: clippy
      - name: Install dependencies
        run: sudo apt-get install llvm
      - name: Install cargo-afl binary crate
        uses: actions-rs/install@9da1d2adcfe5e7c16992e8242ca33a56b6d9b101 # v0.1.2
        with:
          crate: cargo-afl
          version: latest
          use-tool-cache: true
      - uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # v1.0.1
        with:
          command: clippy
          args: --all-targets -- -D warnings

  publish-dry-run:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
        with:
          toolchain: stable
      - name: Dry-run publish curve25519-parser
        run: cd curve25519-parser && cargo publish --dry-run
      - name: Dry-run publish mla
        run: cd mla && cargo publish --dry-run
      - name: Dry-run publish mlar
        run: cd mlar && cargo publish --dry-run
      
