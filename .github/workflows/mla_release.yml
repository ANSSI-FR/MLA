name: mla release
# This workflow builds and releases MLA library artifacts across all platforms,
# including support for legacy Windows 7 targets via custom tier-3 builds.

permissions: {}

on:
  push:
    tags:
      - "mla-v*"

env:
  GITHUB_REF: "${{ github.ref }}"

jobs:
  build:
    strategy:
      matrix:
        build: [linux-x86_64, windows-i686, windows-x86_64, windows-i686-debug, windows-x86_64-debug]
        include:
          - build: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            cargo_arg: --release
            path: |
              ./target/x86_64-unknown-linux-musl/release/libmla.a
          - build: windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
            msvc_platform: Win32
            cargo_arg: --release
            path: |
              ./target/i686-pc-windows-msvc/release/mla.lib
              ./target/i686-pc-windows-msvc/release/mla.dll
              ./target/i686-pc-windows-msvc/release/mla.dll.lib
              ./target/i686-pc-windows-msvc/release/mla.pdb
          - build: windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            msvc_platform: x64
            cargo_arg: --release
            path: |
              ./target/x86_64-pc-windows-msvc/release/mla.lib
              ./target/x86_64-pc-windows-msvc/release/mla.dll
              ./target/x86_64-pc-windows-msvc/release/mla.dll.lib
              ./target/x86_64-pc-windows-msvc/release/mla.pdb
          - build: windows-i686-debug
            os: windows-latest
            target: i686-pc-windows-msvc
            msvc_platform: Win32
            cargo_arg: ""
            path: |
              ./target/i686-pc-windows-msvc/debug/mla.lib
              ./target/i686-pc-windows-msvc/debug/mla.dll
              ./target/i686-pc-windows-msvc/debug/mla.dll.lib
              ./target/i686-pc-windows-msvc/debug/mla.pdb
          - build: windows-x86_64-debug
            os: windows-latest
            target: x86_64-pc-windows-msvc
            msvc_platform: x64
            cargo_arg: ""
            path: |
              ./target/x86_64-pc-windows-msvc/debug/mla.lib
              ./target/x86_64-pc-windows-msvc/debug/mla.dll
              ./target/x86_64-pc-windows-msvc/debug/mla.dll.lib
              ./target/x86_64-pc-windows-msvc/debug/mla.pdb
          - build: windows7-i686 # Win7-compatible build using tier 3 target
            os: windows-latest
            target: i686-win7-windows-msvc
            msvc_platform: Win32
            cargo_arg: --release -Z build-std # Build std from source, needed for tier 3 target
            path: |
              ./target/i686-win7-windows-msvc/release/mla.lib
              ./target/i686-win7-windows-msvc/release/mla.dll
              ./target/i686-win7-windows-msvc/release/mla.dll.lib
              ./target/i686-win7-windows-msvc/release/mla.pdb
          - build: windows7-x86_64 # Win7-compatible build using tier 3 target
            os: windows-latest
            target: x86_64-win7-windows-msvc
            msvc_platform: x64
            cargo_arg: --release -Z build-std # Build std from source, needed for tier 3 target
            path: |
              ./target/x86_64-win7-windows-msvc/release/mla.lib
              ./target/x86_64-win7-windows-msvc/release/mla.dll
              ./target/x86_64-win7-windows-msvc/release/mla.dll.lib
              ./target/x86_64-win7-windows-msvc/release/mla.pdb

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
      # Skip rustup target add for win7 targets â€” rustup doesn't support these tier-3 targets
      if: matrix.target && !contains(matrix.target, 'win7')
      with:
        toolchain: stable
        target: ${{ matrix.target }}
    - uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2.0.0
      if: matrix.msvc_platform
    - name: Install rust-src (only for win7)
      # For win7 targets, manually build std by installing rust-src
      if: contains(matrix.target, 'win7')
      run: rustup component add rust-src
    - name: Cache build-std artifacts (only for win7)
      # Only apply caching to Win7 tier-3 targets that require build-std
      if: contains(matrix.target, 'win7')
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        # Cache the parts of target/ that contain compiled std artifacts for the given target
        path: |
          target/${{ matrix.target }}/release/build
          target/${{ matrix.target }}/release/deps
          target/${{ matrix.target }}/release/.fingerprint
        # Unique cache key: includes OS, target, and hash of Cargo.lock
        key: build-std-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
        # If there's no exact match, fall back to older caches for the same target
        restore-keys: |
          build-std-${{ runner.os }}-${{ matrix.target }}-
    - name: Build static library
      uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # v1.0.1
      env:
        # RUSTC_BOOTSTRAP=1 allows use of -Z build-std on stable toolchain
        # Required because win7 targets aren't officially supported in stable
        RUSTC_BOOTSTRAP: "${{ contains(matrix.target, 'win7') && '1' || '' }}"
      with:
        command: build
        args: ${{ matrix.cargo_arg }} --manifest-path=bindings/C/Cargo.toml --target=${{ matrix.target }}
    - name: Upload resulting 'mla'
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
      with:
        name: mla-${{ matrix.build }}
        path: ${{ matrix.path }}

  release:
    permissions:
      contents: write
    # From https://github.com/cloudflare/wrangler/blob/master/.github/workflows/release.yml
    name: GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Query version number
        id: get_version
        shell: bash
        run: |
          echo "using version tag ${GITHUB_REF:15}"
          echo "version=${GITHUB_REF:15}" >> $GITHUB_OUTPUT
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@32aa5b4c155d76c94e4ec883a223c947b2f02656 # v2.2.3
        with:
          path: ./mla/CHANGELOG.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: mla-${{ steps.get_version.outputs.VERSION }}
          release_name: mla-${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          draft: true

      - name: Download linux-x86_64 artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: mla-linux-x86_64
          path: mla-linux-x86_64

      - name: Download windows-i686 artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: mla-windows-i686
          path: mla-windows-i686

      - name: Download windows-x86_64 artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: mla-windows-x86_64
          path: mla-windows-x86_64

      - name: Download windows-i686-debug artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: mla-windows-i686-debug
          path: mla-windows-i686-debug

      - name: Download windows-x86_64-debug artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: mla-windows-x86_64-debug
          path: mla-windows-x86_64-debug

      - name: Download windows7-i686 artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          name: mla-windows7-i686
          path: mla-windows7-i686

      - name: Download windows7-x86_64 artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          name: mla-windows7-x86_64
          path: mla-windows7-x86_64

      - name: Release Linux artifact
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mla-linux-x86_64/libmla.a
          asset_content_type: application/octet-stream
          asset_name: libmla-x86_64-static-${{ steps.get_version.outputs.VERSION }}.a

      - name: Zip Windows releases
        run: |
          zip --junk-paths windows-i686 mla-windows-i686/mla.dll mla-windows-i686/mla.lib mla-windows-i686/mla.dll.lib mla-windows-i686/mla.pdb
          zip --junk-paths windows-x86_64 mla-windows-x86_64/mla.dll mla-windows-x86_64/mla.lib mla-windows-x86_64/mla.dll.lib mla-windows-x86_64/mla.pdb
          zip --junk-paths windows-i686-debug mla-windows-i686-debug/mla.dll mla-windows-i686-debug/mla.lib mla-windows-i686-debug/mla.dll.lib mla-windows-i686-debug/mla.pdb
          zip --junk-paths windows-x86_64-debug mla-windows-x86_64-debug/mla.dll mla-windows-x86_64-debug/mla.lib mla-windows-x86_64-debug/mla.dll.lib mla-windows-x86_64-debug/mla.pdb
          zip --junk-paths windows7-i686 mla-windows7-i686/mla.dll mla-windows7-i686/mla.lib mla-windows7-i686/mla.dll.lib mla-windows7-i686/mla.pdb
          zip --junk-paths windows7-x86_64 mla-windows7-x86_64/mla.dll mla-windows7-x86_64/mla.lib mla-windows7-x86_64/mla.dll.lib mla-windows7-x86_64/mla.pdb

      - name: Release windows-i686
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-i686.zip
          asset_content_type: application/zip
          asset_name: libmla-windows-i686-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Release windows-x86_64
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-x86_64.zip
          asset_content_type: application/zip
          asset_name: libmla-windows-x86_64-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Release windows-i686-debug
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-i686-debug.zip
          asset_content_type: application/zip
          asset_name: libmla-windows-i686-debug-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Release windows-x86_64-debug
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-x86_64-debug.zip
          asset_content_type: application/zip
          asset_name: libmla-windows-x86_64-debug-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Release windows7-i686
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows7-i686.zip
          asset_content_type: application/zip
          asset_name: libmla-windows7-i686-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Release windows7-x86_64
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows7-x86_64.zip
          asset_content_type: application/zip
          asset_name: libmla-windows7-x86_64-${{ steps.get_version.outputs.VERSION }}.zip

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Release C Header file
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bindings/C/mla.h
          asset_content_type: application/octet-stream
          asset_name: mla.h

      - name: Release CPP Header file
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bindings/C/mla.hpp
          asset_content_type: application/octet-stream
          asset_name: mla.hpp

